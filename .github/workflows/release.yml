name: "Release SDK"

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Do a dry run to preview instead of a real release [true/false]'
        required: true
        default: 'true'

jobs:
  # SDK release is done from public/master branch.
  confirm-master-branch:
    name: "Confirm release is run on master branch"
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Branch name
        run: |
          BRANCHNAME=${GITHUB_REF##*/}
          echo "pulling branch name, branch name is:"
          echo $BRANCHNAME
          if [ $BRANCHNAME != "master" ]
          then
            echo "You can only run a release from the master branch, you are trying to run it from ${BRANCHNAME}"
            exit 1
          fi
  create-release-branch:
    runs-on: ubuntu-18.04
    needs: confirm-master-branch
    steps:
      - name: "Checkout Internal Development Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mparticle/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: development
      - name: "Merge back release commits to public/master repository"
        run: git checkout -b release/${{ github.run_number }}; git push origin release/${{ github.run_number }}
  instrumented-tests:
    timeout-minutes: 30
    needs: create-release-branch
    runs-on: macos-10.15
    steps:
      - name: "Checkout Internal Release Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mparticle/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: release/${{ github.run_number }}
      - name: "Start Emulator"
        run: ./scripts/install-start-emulator.sh
      - name: "Run Instrumented Tests"
        run: ./gradlew :android-core:cAT :android-kit-base:cAT --stacktrace
      - name: "Archive Instrumented Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: android-core/build/reports/androidTests/connected/**
  unit-tests:
    timeout-minutes: 15
    needs: create-release-branch
    runs-on: ubuntu-18.04
    steps:
      - name: "Checkout Internal Release Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mparticle/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: release/${{ github.run_number }}
      - name: Install JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Unit Tests
        run: ./gradlew test
      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }}
  update-kits:
    needs: [instrumented-tests, unit-tests]
    runs-on: macos-10.15
    env:
      GIT_AUTHOR_NAME: mparticle-bot
      GIT_AUTHOR_EMAIL: developers@mparticle.com
      GIT_COMMITTER_NAME: mparticle-bot
      GIT_COMMITTER_EMAIL: developers@mparticle.com
    steps:
      - name: "Checkout Internal Release Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mparticle/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: release/${{ github.run_number }}
          submodules: recursive
      - name: "Build Android Core"
        run: ./gradlew -Ptarget_maven_repo=test -PisRelease=true cleanBuildCache clean testRelease uploadArchives
      - name: "Update Kit references"
        run: git submodule foreach "git fetch; git reset --hard origin/master";
      - name: "Test Kits"
        run: ./gradlew -Ptarget_maven_repo=test -PisRelease=true cleanBuildCache clean testRelease uploadArchives -c settings-kits.gradle
      - name: "Commit Kit Updates"
        run: |
          git add .; git diff-index --quiet HEAD || git commit -m 'feat: Update Submodules'
      - name: "Upload Kit branch"
        run: git push origin release/${{ github.run_number }}
  semantic-release:
    needs: update-kits
    runs-on: macos-10.15
    env:
      GITHUB_TOKEN: ${{ secrets.ANDROID_GITHUB_PAT }}
      GIT_AUTHOR_NAME: mparticle-bot
      GIT_AUTHOR_EMAIL: developers@mparticle.com
      GIT_COMMITTER_NAME: mparticle-bot
      GIT_COMMITTER_EMAIL: developers@mparticle.com
    steps:
      - name: "Checkout public/master Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: master
      - name: "Add new release branch commits to public/master for release"
        run: |
          git remote add internal https://${{ secrets.ANDROID_GITHUB_PAT }}@github.com/mParticle/mparticle-android-sdk-internal.git
          git fetch internal
          git pull internal release/${{ github.run_number }}
      - name: "Semantic Release --dry-run"
        if: ${{ github.event.inputs.dryRun == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.ANDROID_GITHUB_PAT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release --dry-run
      - name: "Semantic Release"
        if: ${{ github.event.inputs.dryRun == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.ANDROID_GITHUB_PAT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release
      - name: "Merge back release commits to release branch"
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git push internal HEAD:release/${{ github.run_number }}
  sonatype-release:
    needs: semantic-release
    runs-on: ubuntu-18.04
    env:
      sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
      mavenSigningKeyId: ${{ secrets.MAVEN_CENTRAL_SIGNING_KEY }}
      mavenSigningKeyPassword: ${{ secrets.MAVEN_CENTRAL_SIGNING_KEY_PASSWORD }}
    steps:
      - name: "Checkout Internal Release Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mparticle/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: release/${{ github.run_number }}
          submodules: recursive
      - name: "Publish Core, KitManager, KitPlugin"
        if: ${{ github.event.inputs.dryRun == 'false'}}
        run: |
          ./gradlew -Ptarget_maven_repo=sonatype -PisRelease=true uploadArchives --stacktrace
      - name: "Publish Kits"
        if: ${{ github.event.inputs.dryRun == 'false'}}
        # build kit-plugin locally so kits will compile, then release to sonatype
        run: |
          ./gradlew -Ptarget_maven_repo=mavenLocal -PisRelease=true uploadArchives;
          ./gradlew -Ptarget_maven_repo=sonatype -PisRelease=true uploadArchives -c settings-kits.gradle --stacktrace
  sync-repository:
    needs: sonatype-release
    runs-on: ubuntu-18.04
    steps:
      - name: "Checkout public/master Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.ANDROID_GITHUB_PAT }}
          ref: master
      - name: "Add new release branch commits to public/master for release"
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git remote add internal https://${{ secrets.ANDROID_GITHUB_PAT }}@github.com/mParticle/mparticle-android-sdk-internal.git
          git fetch internal
          git pull internal release/${{ github.run_number }}
      - name: "Merge back release commits to public/master repository"
        if: ${{ github.event.inputs.dryRun == 'false'}}
        run: |
          git push origin HEAD:master
      - name: "Merge back release commits to internal repository"
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git push internal HEAD:development
          git push internal HEAD:master
      - name: "Delete Release Branch"
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git push --delete internal release/${{ github.run_number }}